- name: Configurando Repositorio
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release

- name: Add Docker Oficial GPG Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg   
    state: present

- name: Obtendo vensao atual do SO
  shell: lsb_release -cs
  register: ubuntu_version    

- name: Add Repositorio Docker
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
    state: present

- name: Instalando o Docker
  apt:
    name: docker-ce
    update_cache: true

- name: Ajustando para driver adequado ao Docker 
  copy:
    dest: "/etc/docker/daemon.json"
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"]
      }

- name: Reinicializando daemon
  systemd: 
    daemon_reload: yes  

- name: Instalando Docker-Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/v2.0.1/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 'u+x,g+x' 

- name: Instalando Ansible
  apt:
    name: ansible

- name: Instalando Nodejs
  apt:
    name: nodejs

- name: Instalando Npm
  apt:
    name: npm

- name: Instalando python3-pip
  apt:
    name: python3-pip

- name: Instalando Unzip
  apt:
    name: unzip

- name: Download e Unzip AWX
  unarchive:
    src: https://github.com/ansible/awx/archive/17.1.0.zip
    dest: /home/ubuntu/
    remote_src: yes

- name: Instalando Pwgen
  apt:
    name: pwgen

- name: Equalizando versao docker-compose
  pip:
    name: docker-compose==1.28.5    

- name: Criacao Docker Grupo
  group:
    name: "docker"
    state: present

- name: Adicionando {{ user_remote_server }} ao grupo do docker
  user:
    name: "{{ user_remote_server }}"
    groups: "docker"
    append: "yes"    